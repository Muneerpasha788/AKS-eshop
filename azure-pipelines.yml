trigger:
- main

pool:
  name: 'default'
  demands:
    - Agent.Name -equals Muneer

variables:
  # ACR service connection and registry details â€“ update these to match your environment.
  dockerRegistryServiceConnection: 'ACR'
  dockerRegistry: 'mycontainerregistry788.azurecr.io'
  tag: '111'
  
  # Define image repository names for each service.
  imageRepositoryCatalog: 'eshop/catalog-api'
  imageRepositoryOrdering: 'eshop/ordering-api'
  imageRepositoryBasket: 'eshop/basket-api'
  imageRepositoryIdentity: 'eshop/identity-api'
  imageRepositoryPayment: 'eshop/payment-api'
  imageRepositoryWebhooks: 'eshop/webhooks-api'
  imageRepositoryMobileBff: 'eshop/mobile-bff'
  imageRepositoryWebBff: 'eshop/web-bff'

steps:
- task: Docker@2
  displayName: 'Docker Login'
  inputs:
    containerRegistry: 'ACR'
    command: 'login'

- task: Docker@2
  displayName: 'Build and Push Catalog.API'
  inputs:
    repository: '$(dockerRegistry)/$(imageRepositoryCatalog)'
    command: 'buildAndPush'
    Dockerfile: 'eShopOnContainers/src/Services/Catalog/Catalog.API/Dockerfile'
    buildContext: 'eShopOnContainers/src'
    tags: '$(tag)'

- task: Docker@2
  displayName: 'Build and Push Ordering.API'
  inputs:
    containerRegistry: 'ACR'
    repository: '$(dockerRegistry)/$(imageRepositoryOrdering)'
    command: 'buildAndPush'
    Dockerfile: 'eShopOnContainers/src/Services/Ordering/Ordering.API/Dockerfile'
    buildContext: 'eShopOnContainers/src'
    tags: '$(tag)'

- task: Docker@2
  displayName: 'Build and Push Basket.API'
  inputs:
    containerRegistry: 'ACR'
    repository: '$(dockerRegistry)/$(imageRepositoryBasket)'
    command: 'buildAndPush'
    Dockerfile: 'eShopOnContainers/src/Services/Basket/Basket.API/Dockerfile'
    buildContext: 'eShopOnContainers/src'
    tags: '$(tag)'

- task: Docker@2
  displayName: 'Build and Push Payment.API'
  inputs:
    containerRegistry: 'ACR'
    repository: '$(dockerRegistry)/$(imageRepositoryPayment)'
    command: 'buildAndPush'
    Dockerfile: 'eShopOnContainers/src/Services/Payment/Payment.API/Dockerfile'
    buildContext: 'eShopOnContainers/src'
    tags: '$(tag)'
- task: Docker@2
  displayName: 'Build and Push Identity.API'
  inputs:
    containerRegistry: 'ACR'
    repository: '$(dockerRegistry)/$(imageRepositoryIdentity)'
    command: 'buildAndPush'
    Dockerfile: 'eShopOnContainers/src/Services/Identity/Identity.API/Dockerfile'
    buildContext: 'eShopOnContainers/src'
    tags: '$(tag)'
- task: Docker@2
  displayName: 'Build and Push Webhooks.API'
  inputs:
    containerRegistry: 'ACR'
    repository: '$(dockerRegistry)/$(imageRepositoryWebhooks)'
    command: 'buildAndPush'
    Dockerfile: 'eShopOnContainers/src/Services/Webhooks/Webhooks.API/Dockerfile'
    buildContext: 'eShopOnContainers/src'
    tags: '$(tag)'

- task: Docker@2
  displayName: 'Build and Push Mobile BFF'
  inputs:
    containerRegistry: 'ACR'
    repository: '$(dockerRegistry)/$(imageRepositoryMobileBff)'
    command: 'buildAndPush'
    Dockerfile: 'eShopOnContainers/src/ApiGateways/Mobile.Bff.Shopping/aggregator/Dockerfile'
    buildContext: 'eShopOnContainers/src'
    tags: '$(tag)'

- task: Docker@2
  displayName: 'Build and Push Web BFF'
  inputs:
    containerRegistry: 'ACR'
    repository: '$(dockerRegistry)/$(imageRepositoryWebBff)'
    command: 'buildAndPush'
    Dockerfile: 'eShopOnContainers/src/ApiGateways/Web.Bff.Shopping/aggregator/Dockerfile'
    buildContext: 'eShopOnContainers/src'
    tags: '$(tag)'